name: Python package

on:
  push:
    paths:
      - tor_proxy/__init__.py

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Get version from __init__.py
      id: get_version
      run: |
        VERSION=$(grep -oP "__version__\s*=\s*['\"]([^'\"]+)['\"]" tor_proxy/__init__.py | grep -oP "['\"]([^'\"]+)['\"]" | tr -d "'\"")
         >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt install python3-apt
        python -m pip install --upgrade pip
        python -m pip install stem
        pip install setuptools wheel twine flake8
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

    - name: Create GitHub Release
      uses: marvinpinto/action-automatic-releases@latest
      with: 
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ env.VERSION }}"
        prerelease: false
        title: "Build ${{ env.VERSION }}"
        files: |
          dist/*.whl